{"ast":null,"code":"var _jsxFileName = \"/Users/ianjansenvanrensburg/Documents/surgical-society_app/surgical_society_app/src/components/EditAppointment.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditAppointment = props => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [roomData, setRoomData] = useState([]);\n  const [dataPatient, setDataPatient] = useState([]);\n  let selectedDoctor = useRef();\n  let selectedRoom = useRef();\n  let selectedPatient = useRef();\n  useEffect(() => {\n    console.log('asgasg');\n    axios.get('http://localhost:8888/surgicalApi/readDoctors.php').then(res => {\n      let docData = res.data;\n      setData(docData);\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.get('http://localhost:8888/surgicalApi/readRoom.php').then(res => {\n      let data = res.data;\n      setRoomData(data);\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.get('http://localhost:8888/surgicalApi/readPatients.php').then(res => {\n      let PatientData = res.data;\n      setDataPatient(PatientData);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  const [updatedAppointment, setUpdatedAppointment] = useState({\n    id: props.id,\n    newPatient: props.origionalPatientName,\n    newDate: props.origionalDate,\n    newTime: props.origionalTime,\n    newDoctor: props.origionalDoctorName,\n    newRoom: props.origionalRoom\n  });\n\n  const closeModal = () => {\n    props.rerender();\n  };\n\n  useEffect(() => {\n    document.getElementById('patientName').innerHTML = props.origionalPatientName;\n    document.getElementById('time').innerHTML = props.origionalTime;\n    document.getElementById('dr').innerHTML = props.origionalDoctorName;\n    document.getElementById('drRoom').innerHTML = props.origionalRoom;\n    document.getElementById('date').innerHTML = props.origionalDate;\n  }, []);\n\n  const nameChange = e => {\n    let value = selectedPatient.current.value;\n    setUpdatedAppointment({ ...updatedAppointment,\n      newPatient: value\n    });\n  }; // const docVal = () => {\n  //     const doctorName = selectedDoctor.current.value;\n  //     setNewAppointment({...newAppointmet, doctorName: doctorName});\n  //     // validate if the field is empty.\n  //     if(newAppointmet.doc !== ''){setDocError();}\n  // }\n\n\n  const doctorChange = () => {\n    let newDoctor = selectedDoctor.current.value;\n    setUpdatedAppointment({ ...updatedAppointment,\n      newDoctor: newDoctor\n    });\n  };\n\n  const timeChange = e => {\n    let value = e.target.value;\n    setUpdatedAppointment({ ...updatedAppointment,\n      newTime: value\n    });\n  };\n\n  const dateChange = e => {\n    let value = e.target.value;\n    setUpdatedAppointment({ ...updatedAppointment,\n      newDate: value\n    });\n  };\n\n  const roomChange = () => {\n    let newRoom = selectedRoom.current.value;\n    setUpdatedAppointment({ ...updatedAppointment,\n      newRoom: newRoom\n    });\n  };\n\n  const updateAppointment = () => {\n    axios.post('http://localhost:8888/mediclinicApi/updateAppointment.php', updatedAppointment).then(res => {\n      let data = res.data;\n      console.log(data);\n      props.upRender(true);\n      props.rerender();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editAppointment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"close\",\n        onClick: closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"name\",\n        id: \"patientName\",\n        ref: selectedPatient,\n        onChange: nameChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Select Patient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), dataPatient.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: [item.name, \" \", item.surname]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 46\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"date\",\n        type: \"date\",\n        id: \"date\",\n        onChange: dateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"time\",\n        type: \"time\",\n        id: \"time\",\n        onChange: timeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"room\",\n        id: \"drRoom\",\n        ref: selectedRoom,\n        onChange: roomChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Select Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), roomData.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: item.room\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 43\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"doc\",\n        id: \"dr\",\n        ref: selectedDoctor,\n        onChange: doctorChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          id: \"dr\",\n          children: \"Select Doctor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: item.surname\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 39\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        onClick: updateAppointment,\n        children: \"Edit this appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditAppointment, \"EAyMypFXeAMQTkecdxMXTkXoWtU=\");\n\n_c = EditAppointment;\nexport default EditAppointment;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAppointment\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","EditAppointment","props","data","setData","roomData","setRoomData","dataPatient","setDataPatient","selectedDoctor","selectedRoom","selectedPatient","console","log","get","then","res","docData","catch","err","PatientData","updatedAppointment","setUpdatedAppointment","id","newPatient","origionalPatientName","newDate","origionalDate","newTime","origionalTime","newDoctor","origionalDoctorName","newRoom","origionalRoom","closeModal","rerender","document","getElementById","innerHTML","nameChange","e","value","current","doctorChange","timeChange","target","dateChange","roomChange","updateAppointment","post","upRender","map","item","name","surname","room"],"sources":["/Users/ianjansenvanrensburg/Documents/surgical-society_app/surgical_society_app/src/components/EditAppointment.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\n\nconst EditAppointment = (props) => {\n\n    const [data, setData] = useState([]);\n    const [roomData, setRoomData] = useState([]);\n    const [dataPatient, setDataPatient] = useState([]);\n    let selectedDoctor = useRef();\n    let selectedRoom = useRef();\n    let selectedPatient = useRef();\n\n    useEffect(() => {\n\n        console.log('asgasg')\n\n        axios.get('http://localhost:8888/surgicalApi/readDoctors.php')\n        .then((res) => {\n            let docData = res.data;\n            setData(docData);\n        })\n        .catch(err=>{\n            console.log(err);\n        });\n\n        axios.get('http://localhost:8888/surgicalApi/readRoom.php')\n        .then((res) => {\n            let data = res.data;\n            setRoomData(data);\n        })\n        .catch(err=>{\n            console.log(err);\n        });\n\n        axios.get('http://localhost:8888/surgicalApi/readPatients.php')\n        .then((res) => {\n            let PatientData = res.data;\n            setDataPatient(PatientData);\n        })\n        .catch(err=>{\n            console.log(err);\n        })\n        \n    },[]);\n\n    const [updatedAppointment, setUpdatedAppointment] = useState({\n        id: props.id,\n        newPatient: props.origionalPatientName,\n        newDate: props.origionalDate,\n        newTime: props.origionalTime, \n        newDoctor: props.origionalDoctorName,\n        newRoom: props.origionalRoom\n    })\n\n    const closeModal = () =>{\n        props.rerender();\n    }\n\n    useEffect(() => {\n        document.getElementById('patientName').innerHTML = props.origionalPatientName;\n        document.getElementById('time').innerHTML = props.origionalTime;\n        document.getElementById('dr').innerHTML = props.origionalDoctorName;\n        document.getElementById('drRoom').innerHTML = props.origionalRoom;\n        document.getElementById('date').innerHTML = props.origionalDate;\n    }, []);\n\n    const nameChange = (e) => {\n        let value = selectedPatient.current.value;\n        setUpdatedAppointment({...updatedAppointment, newPatient:value});\n    }\n\n    // const docVal = () => {\n    //     const doctorName = selectedDoctor.current.value;\n    //     setNewAppointment({...newAppointmet, doctorName: doctorName});\n\n    //     // validate if the field is empty.\n    //     if(newAppointmet.doc !== ''){setDocError();}\n    // }\n\n    const doctorChange = () => {\n        let newDoctor = selectedDoctor.current.value;\n        setUpdatedAppointment({...updatedAppointment, newDoctor: newDoctor});\n    }\n\n    const timeChange = (e) => {\n        let value = e.target.value;\n        setUpdatedAppointment({...updatedAppointment, newTime:value});\n    }\n\n    const dateChange = (e) => {\n        let value = e.target.value;\n        setUpdatedAppointment({...updatedAppointment, newDate:value});\n    }\n\n    const roomChange = () => {\n        let newRoom = selectedRoom.current.value;\n        setUpdatedAppointment({...updatedAppointment, newRoom:newRoom});\n    }\n\n    const updateAppointment = () => {\n        axios.post('http://localhost:8888/mediclinicApi/updateAppointment.php', updatedAppointment)\n        .then((res) => {\n            let data = res.data;\n            console.log(data);\n            props.upRender(true);\n            props.rerender();\n        });\n    }\n\n    return(\n        <div className=\"editAppointment\">\n            <form>\n                <div className=\"close\" onClick={closeModal}></div>\n                <h2>Edit Appointment</h2>\n                <select name=\"name\" id=\"patientName\" ref={selectedPatient} onChange={nameChange}>\n                    <option>Select Patient</option>\n                    {dataPatient.map(item => <option key={item.id}>{item.name} {item.surname}</option>)}\n                </select>\n                <input name=\"date\" type=\"date\" id=\"date\" onChange={dateChange}/>\n                <input name=\"time\" type=\"time\" id=\"time\" onChange={timeChange}/>\n                <select name=\"room\" id=\"drRoom\" ref={selectedRoom} onChange={roomChange}>\n                    <option>Select Room</option>\n                    {roomData.map(item => <option key={item.id}>{item.room}</option>)}\n                </select>\n                <select name=\"doc\" id=\"dr\" ref={selectedDoctor} onChange={doctorChange}>\n                    <option id=\"dr\">Select Doctor</option>\n                    {data.map(item => <option key={item.id}>{item.surname}</option>)}\n                </select>\n                <div className='button' onClick={updateAppointment}>Edit this appointment</div>\n            </form>\n        </div>\n    )\n}\n\nexport default EditAppointment;"],"mappings":"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"},"metadata":{},"sourceType":"module"}